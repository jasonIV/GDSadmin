{"version":3,"sources":["img/icon.png","auth/reducers/authReducer.js","dashboard/reducers/dashboardReducer.js","config/url.js","history/reducers/historyReducer.js","store/rootreducer.js","auth/actions/authActions.js","dashboard/actions/dashboardActions.js","history/actions/historyActions.js","auth/containers/signin.js","dashboard/containers/dashboard.js","dashboard/containers/partnerApps.js","history/containers/historyitem.js","history/containers/history.js","App.tsx","config/firebaseconfig.js","serviceWorker.ts","index.tsx","store/store.js"],"names":["module","exports","initialState","auth","loading","error","success","firebaseUrl","transactions","dsuccess","dloading","tloading","combineReducers","state","action","type","payload","dashboard","hist","actions","connect","store","signIn","email","password","dispatch","firebase","signInWithEmailAndPassword","catch","err","onAuthStateChanged","user","props","useRef","isExist","obj","Object","keys","length","useEffect","history","push","className","src","alt","name","placeholder","ref","required","style","color","message","onClick","event","current","value","signOut","then","updateBalance","phoneNo","gds_balance","axios","put","res","alert","textAlign","to","PartnerApps","Component","HistoryItem","amount","Date","time","_seconds","toDateString","width","float","e","Rollback","id","fetchTransactions","get","data","deleteTransaction","params","console","log","handleRollback","preventDefault","stopPropagation","map","item","updatedBalance","require","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","exact","path","component","Signin","Dashboard","History","Boolean","window","location","hostname","match","createStore","rootReducer","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6396c95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.c241c4e3.png\";","import { LOGIN_SUCCESS, \n  LOGIN_LOADING, \n  LOGIN_ERROR,\n  LOGOUT_SUCCESS,\n  LOGOUT_ERROR } from \"../actions/authActions.js\"\n\nconst initialState = {\n  auth: {},\n  loading: false,\n  error: {},\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        auth: action.payload,\n        loading: false\n      }\n    case LOGIN_LOADING:\n      return{\n        ...state,\n        loading: true\n      }\n   case LOGIN_ERROR:\n     return {\n       ...state,\n       error: action.payload,\n       loading: false\n     }\n   case LOGOUT_SUCCESS:\n      return{\n        ...state,\n        auth: {},\n        loading: false,\n        error: {}\n      }\n   case LOGOUT_ERROR:\n      return{\n        ...state,\n        loading: false,\n        error: action.payload\n      }\n   default:\n      return state\n  }\n}\n\n","import {\n  UPDATE_BALANCE_SUCCESS,\n  UPDATE_BALANCE_LOADING,\n  UPDATE_BALANCE_ERROR\n} from \"../actions/dashboardActions.js\"   //importing action types\n\n//inititalstate\nconst initialState = {\n  loading: false,\n  success: false,\n  error: {}\n}\n\n//reducer\nexport default function(state = initialState, action){\n  switch(action.type){\n    case UPDATE_BALANCE_SUCCESS:\n      return{\n        ...state,\n        loading: false,\n        success: true,\n        error: {},\n      }\n   case UPDATE_BALANCE_LOADING:\n      return{\n        ...state,\n        success: false,\n        loading: true,\n        error: {},\n      }\n   case UPDATE_BALANCE_ERROR:\n      return{\n        loading: false,\n        success: false,\n        error: action.payload\n      }\n   default:\n      return state\n  }\n}\n\n  \n      \n","export const firebaseUrl = \"https://us-central1-gdsprototypeapi-1968a.cloudfunctions.net/app/api/\"\n","import { \n  TRANSACTION_LOADING, \n  TRANSACTION_SUCCESS, \n  TRANSACTION_ERROR ,\n  DELETE_TRANSACTION_LOADING,\n  DELETE_TRANSACTION_SUCCESS,\n  DELETE_TRANSACTION_ERROR \n} from \"../actions/historyActions.js\"\n\nconst initialState = {\n  transactions: [],\n  dsuccess: false,\n  dloading: false,\n  tloading: false,\n  error: {},\n}\n\nexport default function (state=initialState, actions){\n  switch(actions.type){\n    case TRANSACTION_LOADING:\n      return{\n        ...state,\n        tloading: true,\n      }\n    case TRANSACTION_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        transactions: actions.payload,\n      }\n    case TRANSACTION_ERROR:\n      return {\n        ...state,\n        error: actions.payload,\n      }\n    case DELETE_TRANSACTION_LOADING:\n      return{\n        ...state,\n        dloading: true,\n      }\n    case DELETE_TRANSACTION_SUCCESS:\n      return{\n        ...state,\n        dloading: false,\n        dsuccess: true,\n      }\n    case DELETE_TRANSACTION_ERROR:\n      return{\n        ...state,\n        dloading: false,\n        error: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from \"redux\"\nimport auth from \"../auth/reducers/authReducer.js\"\nimport dashboard from \"../dashboard/reducers/dashboardReducer.js\"\nimport hist from \"../history/reducers/historyReducer.js\"\n\nexport default combineReducers({\n  auth: auth,\n  dashboard: dashboard,\n  hist: hist,\n})\n","import * as firebase from \"firebase/app\"\nimport \"firebase/auth\"\n\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\nexport const LOGIN_LOADING = \"LOGIN_LOADING\"\nexport const LOGIN_ERROR = \"LOGIN_ERROR\"\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\"\nexport const LOGOUT_ERROR = \"LOGOUT_ERROR\"\n\nexport const signIn = (email, password) => {\n  return(dispatch) => {\n    dispatch({type: LOGIN_LOADING})\n    firebase.auth().signInWithEmailAndPassword(email, password)\n    .catch(err =>\n      dispatch({type: LOGIN_ERROR, payload: err})\n    ) \n    firebase.auth().onAuthStateChanged(function(user) {\n        if(user){\n          dispatch({type: LOGIN_SUCCESS, payload: user})\n        }\n      })\n  }\n}\n\nexport const signOut = () => {\n  return(dispatch) => {\n    firebase.auth().signOut()\n    .then(() => {\n      firebase.auth().onAuthStateChanged(function(user) {\n        if(!user){\n          dispatch({type: LOGOUT_SUCCESS})\n        }\n      })\n    }).catch(err => {\n      dispatch({type: LOGOUT_ERROR, payload: err })\n    })\n  }\n}\n","import axios from 'axios'\n\nconst baseApiUrl = \"https://us-central1-gdsprototypeapi-1968a.cloudfunctions.net/app/api/\"\n\n//action types\nexport const UPDATE_BALANCE_SUCCESS = \"UPDATE_BALANCE_SUCCESS\"\nexport const UPDATE_BALANCE_LOADING = \"UPDATE_BALANCE_LOADING\"\nexport const UPDATE_BALANCE_ERROR = \"UPDATE_BALANCE_ERROR\"\n\n//actions\nexport const updateBalance = (phoneNo,gds_balance) => {\n  return(dispatch) => {\n    dispatch({type: UPDATE_BALANCE_LOADING})\n    axios.put(`${baseApiUrl}balance/add/${phoneNo}`, {\n      gds_balance\n    })\n    .then(res => { \n      dispatch({type: UPDATE_BALANCE_SUCCESS})\n      alert(\"Balance has been updated.\")\n    })\n    .catch(err => dispatch({type: UPDATE_BALANCE_ERROR, payload: err}))\n  }\n}\n","import axios from \"axios\"; \nimport {firebaseUrl} from \"../../config/url.js\";\n\n//action types\nexport const TRANSACTION_LOADING = \"TRANSACTION_LOADING\";\nexport const TRANSACTION_SUCCESS = \"TRANSACTION_SUCCESS\";\nexport const TRANSACTION_ERROR = \"TRANSACTION_ERROR\";\nexport const DELETE_TRANSACTION_LOADING = \"DELETE_TRANSACTION_LOADING\";\nexport const DELETE_TRANSACTION_SUCCESS = \"DELETE_TRANSACTION_SUCCESS\";\nexport const DELETE_TRANSACTION_ERROR = \"DELETE_TRANSACTION_ERROR\";\n\n//actions\nexport const fetchTransactions = () => {\n  return(dispatch) => {\n    dispatch({type: TRANSACTION_LOADING})\n    axios.get(`${firebaseUrl}balance/read`)\n      .then(res => {\n        dispatch({type: TRANSACTION_SUCCESS, payload: res.data})\n      })\n      .catch(err => {\n        dispatch({type: TRANSACTION_ERROR, payload: err})\n      })\n}}\n\nexport const deleteTransaction = params => {\n  return(dispatch) => {\n    console.log(params)\n    dispatch({type: DELETE_TRANSACTION_LOADING}) \n    axios.put(`${firebaseUrl}balance/rollback`,{\n      id: params\n    })\n    .then(res => {\n      dispatch({type: DELETE_TRANSACTION_SUCCESS})\n      alert(\"Rolled back successfully.\")\n    })\n    .catch(err => {\n      dispatch({type: DELETE_TRANSACTION_ERROR, payload: err})\n    })\n  }\n}\n","import React,{ useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport icon from '../../img/icon.png';\nimport Navbar from '../../components/navbar.js'\nimport { connect } from \"react-redux\"\nimport { signIn } from \"../actions/authActions.js\"\n\nfunction Signin(props){\n\n  const { auth, error, loading } = props\n\n  const email = useRef(null)\n  const password = useRef(null)\n  \n  const handleSignIn = (event) => {\n    props.signIn(email.current.value, password.current.value)\n  }\n  \n  const isExist = obj => {\n    return Object.keys(obj).length\n  }\n\n  useEffect(() => {\n    if(isExist(auth)){\n      props.history.push(\"/dashboard\")\n    }\n  },[auth])\n\n  return(\n    <div className=\"wrap\">\n      <div className=\"container\">\n        <div className=\"singin\">\n          <div className=\"title\">\n            <p className=\"text-center\">\n              GDS Admin App\n            </p>\n          </div>\n            <div className=\"content\">\n              <div className=\"signin\">\n                <p className=\"title\">Sign In</p>\n                <img src={\"https://i.imgur.com/Uwx156f.png\"} alt=\"SIGNIN\" />\n              </div>\n              <div className=\"form\">\n                <input type=\"text\" name=\"\" placeholder=\"Email\" ref={email} required={true} />\n                <input type=\"password\" name=\"\" placeholder=\"Password\" ref={password} required={true} />\n                { isExist(error) ? \n                  <div style={{color: \"red\"}}>\n                    {error.message}\n                  </div>\n                  : null }\n                <button className=\"btn-com btn-m-t\" onClick={handleSignIn} >\n                  {loading? <p>Loading</p> : <p>Sign In</p>}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nconst mapStateToProps = store => {\n  return{\n    auth: store.auth.auth,\n    loading: store.auth.loading,\n    error: store.auth.error\n  }\n}\n\n\nexport default connect( mapStateToProps, { signIn } )(Signin)\n","import React,{ useRef, useEffect } from 'react';\nimport {Link} from \"react-router-dom\";\nimport { TiArrowBackOutline } from 'react-icons/ti';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nimport { IoMdListBox } from 'react-icons/io';\nimport { connect } from \"react-redux\"\nimport { signOut } from \"../../auth/actions/authActions.js\"\nimport { updateBalance } from \"../actions/dashboardActions.js\"\n\nfunction Dashboard(props){\n  const phoneNo = useRef(null)\n  const gds_balance = useRef(null)\n\n  const { auth, success, loading, error } = props\n\n  const isExist = obj => {\n    return Object.keys(obj).length\n  }\n  \n  const handleSignOut = (event) => {\n    props.signOut()\n  }\n\n  const handleUpdate = (event) => {\n    props.updateBalance(phoneNo.current.value, gds_balance.current.value)\n  }\n\n  useEffect(() => {\n    if(!isExist(auth)){\n      props.history.push(\"/signin\")\n    }\n  },[auth])\n\n  return(\n      <div className=\"wrap\">\n              <div className=\"dashboard main-content\">\n                <div className=\"title\">\n                  <p className=\"text-center\">\n                    GDS Admin App\n                  </p>\n                </div>\n                  <div className=\"balance inn-content\">\n                    {/*<ul className=\"list\">\n                          <li>\n                              <p>Balance  <i className=\"float-right\"> 30000 ks</i></p>\n                          </li>\n                      </ul>*/}\n                    <div className=\"form\">\n                      <input type=\"number\" name=\"\" placeholder=\"Phone Number\" ref={phoneNo} required={true} />\n                      <input type=\"number\" name=\"\" placeholder=\"Balance Amount\" ref={gds_balance} required={true} />\n                    { isExist(error) ? \n                      <div style={{textAlign: \"center\", color: \"red\"}}>\n                        {error.message}\n                      </div>\n                      : null }\n                      <button className=\"btn-com btn-m-t\" onClick={handleUpdate}>\n                        {loading? <p>Loading</p> : <p>Add Balance</p>}\n                      </button>\n                      <button type=\"button\" onClick={handleSignOut} className=\"btn-com\"><TiArrowBackOutline /> Log Out</button>\n                    </div>\n                    {/*}<div className=\"app\"><Link to=\"/partnerApp\"><AiFillPlusCircle/></Link></div>*/}\n                    <div className=\"history-list\"><Link to=\"/history\"><IoMdListBox/></Link></div>\n                  </div>\n              </div>\n          </div>\n  );\n}\n\nconst mapStateToProps = store =>{\n  return{\n    auth: store.auth.auth,\n    success: store.dashboard.success,\n    loading: store.dashboard.loading,\n    error: store.dashboard.error,\n  }\n}\n\nexport default connect(mapStateToProps, { signOut, updateBalance })(Dashboard);\n","import React,{ Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport { TiArrowBackOutline } from 'react-icons/ti';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nclass PartnerApps extends Component{\n    render() {\n        return(\n            <div className=\"wrap\">\n                <div className=\"dashboard main-content\">\n                    <div className=\"title\">\n                        <p className=\"text-center\">\n                            <Link to=\"/dashboard\" className=\"cl-white bk-btn\" value=\"dashboard\"><TiArrowBackOutline/></Link>GDS Agent App</p>\n                    </div>\n                    <div className=\"history inn-content\">\n                        <p className=\"text-center\">HandlePatner Apps</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default PartnerApps;\n","import React from \"react\"\n\nfunction HistoryItem(props){\n  return(\n    <div className=\"detail\">\n        <p className=\"name\">{props.name}</p>\n        <p className=\"acc\">{props.phoneNo}</p>\n        <p className=\"amount\">MMK - {props.amount}</p>\n        <p className=\"time\">{new Date(props.time._seconds*1000).toDateString()}</p>\n        <button \n          className=\"btn-com\" \n          style={{width: \"auto\", float: \"left\"}}\n          onClick={e => {props.Rollback(e,props.id)}}\n        >\n        Rollback\n        </button>\n    </div>\n  )\n}\n\nexport default HistoryItem\n","import React,{ useEffect } from 'react';\nimport {Link} from \"react-router-dom\";\nimport { TiArrowBackOutline } from 'react-icons/ti';\nimport { AiFillPlusCircle } from 'react-icons/ai';\nimport HistoryItem from \"./historyitem.js\"\nimport { connect } from \"react-redux\";\nimport { fetchTransactions, deleteTransaction } from \"../actions/historyActions.js\"\n\nfunction History(props){\n\n  function handleRollback(e,id) {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log(id);\n    props.deleteTransaction(id);\n    props.fetchTransactions();\n  }\n  \n  useEffect(() => {\n    props.fetchTransactions();\n  },[])\n  \n  const { transactions, tloading, dloading, error } = props\n\n  return(\n    <div className=\"wrap\">\n        <div className=\"dashboard main-content\">\n            <div className=\"title\">\n                <p className=\"text-center\">\n                    <Link to=\"/dashboard\" className=\"cl-white bk-btn\" value=\"dashboard\"><TiArrowBackOutline/></Link>GDS Agent App</p>\n            </div>\n            { tloading? \"Loading Please Wait...\" : (\n              <div className=\"history inn-content\">\n                { transactions.length === 0 ? \"There is no balance history\" :\n                    transactions.map(item => (\n                      <HistoryItem \n                      id={item.id}\n                      name={item.name}\n                      phoneNo={item.phoneNo}\n                      amount={item.amount}\n                      updatedBalance={item.updatedBalance}\n                      time={item.time} \n                      Rollback={handleRollback}\n                      />\n                    ))}\n              </div>\n            )}\n        </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = store => {\n  return {\n    transactions: store.hist.transactions,\n    loading: store.hist.tloading,\n    error: store.hist.error,\n    dloading: store.hist.dloading,\n  }\n}\n\nexport default connect(mapStateToProps, { fetchTransactions, deleteTransaction })(History);\n","import React,{ Component} from 'react';\nimport {\n    Route,\n    HashRouter as Router,\n} from \"react-router-dom\";\n/* import Login from './auth/containers/login.js'; */\nimport Signin from './auth/containers/signin.js';\nimport Signup from './auth/containers/signup.js';\nimport Dashboard from './dashboard/containers/dashboard.js';\nimport PartnerApps from './dashboard/containers/partnerApps.js';\nimport History from './history/containers/history.js';\nimport { firebaseConfig } from './config/firebaseconfig.js'\n\nvar firebase = require(\"firebase/app\")\n\n//Initialize firebase\nfirebase.initializeApp(firebaseConfig)\n\nclass App extends Component {\n    render(){\n        return (\n            <Router>\n                <div>\n                    <Route exact path=\"/\" component={Signin}/>\n                    {/* <Route exact path=\"/login\" component={Login}/> */}\n                    <Route exact path=\"/signin\" component={Signin}/>\n                    {/*<Route exact path=\"/signup\" component={Signup}/>*/}\n                    <Route exact path=\"/dashboard\" component={Dashboard}/>\n                    <Route exact path=\"/partnerApp\" component={PartnerApps}/>\n                    <Route exact path=\"/history\" component={History}/>\n                </div>\n            </Router>\n        );\n    }\n}\nexport default App;\n","export const firebaseConfig = {\n    apiKey: \"AIzaSyB8mP-ENsyflTPlE4LvzofWDd8IJp4fmyg\",\n    authDomain: \"gdsprototypeapi-1968a.firebaseapp.com\",\n    databaseURL: \"https://gdsprototypeapi-1968a.firebaseio.com\",\n    projectId: \"gdsprototypeapi-1968a\",\n    storageBucket: \"gdsprototypeapi-1968a.appspot.com\",\n    messagingSenderId: \"363932682137\",\n    appId: \"1:363932682137:web:a700beaa11413b0db0f508\"\n  };\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './all.css';\nimport './reset.css';\nimport './index.css';\nimport { Provider }  from \"react-redux\"\nimport configureStore from \"./store/store.js\"\n\n// import 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\n// import Login from './containers/login';\n// import Dashboard  from './containers/dashboard';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore({})\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import rootReducer from './rootreducer.js'\nimport { createStore, applyMiddleware, compose } from \"redux\"\nimport thunk from \"redux-thunk\"\n\nexport default function configureStore(initialState){\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(\n        thunk\n      )\n    )\n  )\n  return store\n}\n"],"sourceRoot":""}